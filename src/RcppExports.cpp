// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// address_aton
List address_aton(CharacterVector x);
RcppExport SEXP _ipaddress_address_aton(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(address_aton(x));
    return rcpp_result_gen;
END_RCPP
}
// address_ntoa
CharacterVector address_ntoa(List x);
RcppExport SEXP _ipaddress_address_ntoa(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(address_ntoa(x));
    return rcpp_result_gen;
END_RCPP
}
// network_aton
List network_aton(CharacterVector x);
RcppExport SEXP _ipaddress_network_aton(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(network_aton(x));
    return rcpp_result_gen;
END_RCPP
}
// network_ntoa
CharacterVector network_ntoa(List x);
RcppExport SEXP _ipaddress_network_ntoa(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(network_ntoa(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ipaddress_address_aton", (DL_FUNC) &_ipaddress_address_aton, 1},
    {"_ipaddress_address_ntoa", (DL_FUNC) &_ipaddress_address_ntoa, 1},
    {"_ipaddress_network_aton", (DL_FUNC) &_ipaddress_network_aton, 1},
    {"_ipaddress_network_ntoa", (DL_FUNC) &_ipaddress_network_ntoa, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_ipaddress(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
